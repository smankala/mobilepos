{"ts":1375582059637,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var mongode = require('mongode');\nvar assert = require('assert');\nvar settings = require('../util/config');\n\nfunction insertorder(order){\n\tconsole.log(\"inserting order\"+order);\n\tvar conn = mongode.connect('mongo://'+config.dbhost+':'+config.dbport+'/'+config.db);\n\tvar collection = conn.collection(config.order);\n\tcollection.insert(order, {safe:true}, function(err, objects) {\n \t\t \tif (err) console.warn(err.message);\n\t});\n}\n\nfunction insertmenu(item,res){\n\tconsole.log(\"inserting item\"+item);\n\tvar conn = mongode.connect('mongo://'+config.dbhost+':'+config.dbport+'/'+config.db);\n\tvar collection = conn.collection(config.menu);\n\tvar response ={}; \n\tcollection.insert(item, {safe:true}, function(err, objects) {\n \t\t \tif (err) {\n \t\t \t\tconsole.warn(err.message);\n \t\t \t\tresponse.status=1;\n \t\t \t}\n \t\t \telse\n \t\t \t{\n \t\t \t\tresponse.status=0;\n \t\t \t}\n \t\t\n \t\tvar responseStr = JSON.stringify(response); \t\n \t\tres.writeHead(200, {'Content-Type': 'text/plain'});\n \t\tres.write(responseStr);\n  \t\tres.end();\n\t});\n}\n\nfunction getmenu(res,query){\n\tvar conn = mongode.connect('mongo://'+config.dbhost+':'+config.dbport+'/'+config.db);\n\tvar collection = conn.collection(config.menu);\n\tcollection.find(query,{_id:0}).toArray(function(err,results){\n\t\t\tif(err){ \n\t\t\tconsole.warn(err.message);\n\t\t\t\t\tresults = [];\n\t\t\t\t  \t\n\t \t\t}\n\t \tvar finalresults ={};\n\t \tfinalresults.menuitems = results;\n\t \tvar resultStr = JSON.stringify(finalresults);\n \t\tres.writeHead(200, {'Content-Type': 'text/plain'});\n \t\tres.write(resultStr);\n  \t\tres.end();\n\t});\n}\n\nfunction showorder(res,query){\n\tvar conn = mongode.connect('mongo://'+config.dbhost+':'+config.dbport+'/'+config.db);\n\tvar collection = conn.collection(config.order);\n\tcollection.find(query).toArray(function(err,results){\n\t\t\tif(err){ \n\t\t\t\t\tresults = [];\n\t\t\t}\n\t \t\tvar resultStr = JSON.stringify(results);\n \t\t\tres.writeHead(200, {'Content-Type': 'text/plain'});\n \t\t\tres.write(resultStr);\n  \t\t\tres.end();\n\t});\n}\n\n\n\n\nexports.insertmenu = insertmenu;\nexports.getmenu = getmenu;\nexports.insertorder = insertorder;\nexports.showorder = showorder;"]],"start1":0,"start2":0,"length1":0,"length2":2055}]],"length":2055}
{"contributors":[],"silentsave":false,"ts":1375582437803,"patch":[[{"diffs":[[0,"onnect('mongo://"],[1,"smankala:1ilmdba1@"],[0,"'+config.dbhost+"]],"start1":198,"start2":198,"length1":32,"length2":50}]],"length":2073,"saved":false}
{"ts":1375582889080,"patch":[[{"diffs":[[0,"o://"],[-1,"smankala:1ilmdba1@"],[0,"'+co"]],"start1":210,"start2":210,"length1":26,"length2":8}]],"length":2055,"saved":false}
{"ts":1375583152610,"patch":[[{"diffs":[[0,"onnect('mongo://"],[1,"smankala:1ilmdba1@"],[0,"'+config.dbhost+"]],"start1":1050,"start2":1050,"length1":32,"length2":50}]],"length":2073,"saved":false}
{"contributors":[],"silentsave":false,"ts":1375585564438,"patch":[[{"diffs":[[0,"o://"],[-1,"smankala:1ilmdba1"],[1,"admin:admin"],[0,"@'+c"]],"start1":1062,"start2":1062,"length1":25,"length2":19}]],"length":2067,"saved":false}
{"ts":1375585640502,"patch":[[{"diffs":[[0,"ongo"],[-1,"://admin:admin@"],[1,"db//"],[0,"'+co"]],"start1":1059,"start2":1059,"length1":23,"length2":12}]],"length":2056,"saved":false}
{"ts":1375585650889,"patch":[[{"diffs":[[0,"'mongodb"],[1,":"],[0,"//'+conf"]],"start1":1057,"start2":1057,"length1":16,"length2":17}]],"length":2057,"saved":false}
{"ts":1375585684099,"patch":[[{"diffs":[[0,"e.connect('mongo"],[1,"db"],[0,"://'+config.dbho"]],"start1":195,"start2":195,"length1":32,"length2":34}]],"length":2059,"saved":false}
{"ts":1375585691480,"patch":[[{"diffs":[[0,"e.connect('mongo"],[1,"db"],[0,"://'+config.dbho"]],"start1":514,"start2":514,"length1":32,"length2":34}]],"length":2061,"saved":false}
